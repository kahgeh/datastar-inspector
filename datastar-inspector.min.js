(function(window){"use strict";const DatastarInspector={config:{position:"right",width:"400px",height:"100vh",theme:"dark",startMinimized:!1,hotkey:"Alt+Shift+D"},signals:new Map,changeLog:[],rootSignals:null,isInitialized:!1,isVisible:!0,container:null,expandedSignals:new Set,init(n={}){if(this.isInitialized)return void console.warn("Datastar Inspector is already initialized");const t=localStorage.getItem("datastar-inspector-position");if(t&&["right","left","bottom"].includes(t)&&(n.position=t),Object.assign(this.config,n),"undefined"!=typeof Datastar&&Datastar.load)this.initializeInspector();else{console.error("Datastar not found. Make sure Datastar is loaded before initializing the inspector."),console.log("Looking for Datastar at window.Datastar");const n=setInterval(()=>{window.Datastar&&window.Datastar.load&&(clearInterval(n),this.initializeInspector())},100);setTimeout(()=>{clearInterval(n),this.isInitialized||console.error("Failed to find Datastar after 5 seconds")},5e3)}},initializeInspector(){Datastar.load({type:"watcher",name:"datastarInspector",onGlobalInit:n=>{this.rootSignals=n.root,console.log("üìä Datastar Inspector: Signals exposed"),setTimeout(()=>this.scanSignals(),100)}}),document.addEventListener("datastar-signal-patch",n=>{this.handleSignalPatch(n.detail)}),this.createUI(),this.setupHotkey(),setInterval(()=>this.scanSignals(),2e3),this.isInitialized=!0,console.log("üìä Datastar Inspector initialized. Press "+this.config.hotkey+" to toggle.")},setupHotkey(){document.addEventListener("keydown",n=>{const t=this.config.hotkey.split("+").map(n=>n.trim().toLowerCase()),i=[];n.altKey&&i.push("alt"),n.ctrlKey&&i.push("ctrl"),n.shiftKey&&i.push("shift"),n.metaKey&&i.push("meta"),i.push(n.key.toLowerCase());t.every(n=>i.includes(n))&&(n.preventDefault(),this.toggle())})},createUI(){const n=document.createElement("style");n.textContent=this.getStyles(),document.head.appendChild(n),this.container=document.createElement("div"),this.container.id="datastar-inspector",this.container.className=`dsi-container dsi-${this.config.position} dsi-${this.config.theme}`,this.config.startMinimized?(this.container.classList.add("dsi-minimized"),this.isVisible=!1):this.adjustPageLayout(this.config.position,!0),this.container.innerHTML=`\n                <div class="dsi-header">\n                    <div class="dsi-title">\n                        <span class="dsi-icon">üìä</span>\n                        <span>Datastar Inspector</span>\n                        <span class="dsi-count" id="dsi-signal-count">0 signals</span>\n                    </div>\n                    <div class="dsi-controls">\n                        <select class="dsi-position-selector" onchange="DatastarInspector.changePosition(this.value)" title="Change Position">\n                            <option value="right" ${"right"===this.config.position?"selected":""}>‚Üí</option>\n                            <option value="left" ${"left"===this.config.position?"selected":""}>‚Üê</option>\n                            <option value="bottom" ${"bottom"===this.config.position?"selected":""}>‚Üì</option>\n                        </select>\n                        <button class="dsi-btn" onclick="DatastarInspector.clearLog()" title="Clear Log">üóëÔ∏è</button>\n                        <button class="dsi-btn" onclick="DatastarInspector.exportSignals()" title="Export Signals">üíæ</button>\n                        <button class="dsi-btn" onclick="DatastarInspector.minimize()" title="Minimize">_</button>\n                        <button class="dsi-btn" onclick="DatastarInspector.close()" title="Close">‚úï</button>\n                    </div>\n                </div>\n                <div class="dsi-body">\n                    <div class="dsi-tabs">\n                        <button class="dsi-tab dsi-tab-active" onclick="DatastarInspector.showTab('signals')">Signals</button>\n                        <button class="dsi-tab" onclick="DatastarInspector.showTab('changes')">Changes</button>\n                        <button class="dsi-tab" onclick="DatastarInspector.showTab('console')">Console</button>\n                    </div>\n                    <div class="dsi-content">\n                        <div class="dsi-panel dsi-panel-signals dsi-panel-active" id="dsi-signals">\n                            <div class="dsi-search">\n                                <input type="text" placeholder="Search signals..." oninput="DatastarInspector.filterSignals(this.value)">\n                            </div>\n                            <div class="dsi-signal-list" id="dsi-signal-list"></div>\n                        </div>\n                        <div class="dsi-panel dsi-panel-changes" id="dsi-changes">\n                            <div class="dsi-change-log" id="dsi-change-log"></div>\n                        </div>\n                        <div class="dsi-panel dsi-panel-console" id="dsi-console">\n                            <div class="dsi-console-input">\n                                <input type="text" placeholder="Enter expression (e.g., $signals.count())" onkeypress="if(event.key==='Enter') DatastarInspector.executeCommand(this)">\n                            </div>\n                            <div class="dsi-console-output" id="dsi-console-output"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class="dsi-status">\n                    <span id="dsi-status-text">Ready</span>\n                    <span id="dsi-last-update">Never updated</span>\n                </div>\n            `,document.body.appendChild(this.container)},getStyles:()=>"\n                body.dsi-push-right {\n                    margin-right: 400px !important;\n                    transition: margin-right 0.3s ease;\n                }\n                \n                body.dsi-push-left {\n                    margin-left: 400px !important;\n                    transition: margin-left 0.3s ease;\n                }\n                \n                body.dsi-push-bottom {\n                    margin-bottom: 400px !important;\n                    transition: margin-bottom 0.3s ease;\n                }\n                \n                .dsi-container {\n                    position: fixed;\n                    z-index: 999999;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, monospace;\n                    font-size: 12px;\n                    box-shadow: 0 0 20px rgba(0,0,0,0.5);\n                    display: flex;\n                    flex-direction: column;\n                    transition: transform 0.3s ease;\n                    max-height: 100vh;\n                    overflow: hidden;\n                }\n                \n                .dsi-container.dsi-right {\n                    right: 0;\n                    top: 0;\n                    width: 400px;\n                    height: 100vh;\n                    border-left: 1px solid #3e3e3e;\n                }\n                \n                .dsi-container.dsi-left {\n                    left: 0;\n                    top: 0;\n                    width: 400px;\n                    height: 100vh;\n                    border-right: 1px solid #3e3e3e;\n                }\n                \n                .dsi-container.dsi-bottom {\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    height: 400px;\n                    max-height: 50vh;\n                    border-top: 1px solid #3e3e3e;\n                }\n                \n                .dsi-container.dsi-minimized {\n                    transform: translateX(100%);\n                }\n                \n                .dsi-container.dsi-left.dsi-minimized {\n                    transform: translateX(-100%);\n                }\n                \n                .dsi-container.dsi-bottom.dsi-minimized {\n                    transform: translateY(100%);\n                }\n                \n                /* Dark theme */\n                .dsi-dark {\n                    background: #1e1e1e;\n                    color: #d4d4d4;\n                }\n                \n                .dsi-dark .dsi-header {\n                    background: #2d2d30;\n                    border-bottom: 1px solid #3e3e3e;\n                }\n                \n                .dsi-dark .dsi-signal-item {\n                    background: #252526;\n                    border: 1px solid #3e3e3e;\n                }\n                \n                .dsi-dark .dsi-signal-item:hover {\n                    background: #2d2d30;\n                }\n                \n                .dsi-dark input {\n                    background: #3c3c3c;\n                    border: 1px solid #3e3e3e;\n                    color: #d4d4d4;\n                }\n                \n                /* Light theme */\n                .dsi-light {\n                    background: #ffffff;\n                    color: #333333;\n                }\n                \n                .dsi-light .dsi-header {\n                    background: #f3f3f3;\n                    border-bottom: 1px solid #e0e0e0;\n                }\n                \n                .dsi-light .dsi-signal-item {\n                    background: #f9f9f9;\n                    border: 1px solid #e0e0e0;\n                }\n                \n                .dsi-light .dsi-signal-item:hover {\n                    background: #f0f0f0;\n                }\n                \n                .dsi-light input {\n                    background: #ffffff;\n                    border: 1px solid #e0e0e0;\n                    color: #333333;\n                }\n                \n                /* Common styles */\n                .dsi-header {\n                    padding: 10px;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    user-select: none;\n                }\n                \n                .dsi-title {\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                    font-weight: 500;\n                }\n                \n                .dsi-icon {\n                    font-size: 16px;\n                }\n                \n                .dsi-count {\n                    background: #007acc;\n                    color: white;\n                    padding: 2px 6px;\n                    border-radius: 10px;\n                    font-size: 10px;\n                }\n                \n                .dsi-controls {\n                    display: flex;\n                    gap: 5px;\n                }\n                \n                .dsi-btn {\n                    background: transparent;\n                    border: none;\n                    color: inherit;\n                    cursor: pointer;\n                    padding: 4px 8px;\n                    border-radius: 3px;\n                    font-size: 14px;\n                }\n                \n                .dsi-btn:hover {\n                    background: rgba(127, 127, 127, 0.2);\n                }\n                \n                .dsi-position-selector {\n                    background: transparent;\n                    border: 1px solid rgba(127, 127, 127, 0.3);\n                    color: inherit;\n                    cursor: pointer;\n                    padding: 4px;\n                    border-radius: 3px;\n                    font-size: 14px;\n                    margin-right: 5px;\n                }\n                \n                .dsi-position-selector:hover {\n                    background: rgba(127, 127, 127, 0.2);\n                }\n                \n                .dsi-body {\n                    flex: 1;\n                    display: flex;\n                    flex-direction: column;\n                    overflow: hidden;\n                }\n                \n                .dsi-tabs {\n                    display: flex;\n                    border-bottom: 1px solid #3e3e3e;\n                }\n                \n                .dsi-tab {\n                    flex: 1;\n                    padding: 8px;\n                    background: transparent;\n                    border: none;\n                    color: inherit;\n                    cursor: pointer;\n                    border-bottom: 2px solid transparent;\n                }\n                \n                .dsi-tab:hover {\n                    background: rgba(127, 127, 127, 0.1);\n                }\n                \n                .dsi-tab-active {\n                    border-bottom-color: #007acc;\n                }\n                \n                .dsi-content {\n                    flex: 1;\n                    overflow: hidden;\n                    position: relative;\n                }\n                \n                .dsi-panel {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                    display: none;\n                    flex-direction: column;\n                }\n                \n                .dsi-panel-active {\n                    display: flex;\n                }\n                \n                .dsi-search {\n                    padding: 10px;\n                }\n                \n                .dsi-search input {\n                    width: 100%;\n                    padding: 6px;\n                    border-radius: 3px;\n                }\n                \n                .dsi-signal-list {\n                    flex: 1;\n                    overflow-y: auto;\n                    padding: 10px;\n                }\n                \n                .dsi-signal-item {\n                    margin-bottom: 8px;\n                    border-radius: 4px;\n                    transition: all 0.2s;\n                }\n                \n                .dsi-signal-item.changed {\n                    animation: highlight 0.5s;\n                }\n                \n                @keyframes highlight {\n                    0% { background: #4ec9b0 !important; }\n                    100% { background: inherit; }\n                }\n                \n                .dsi-signal-header {\n                    padding: 8px;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    cursor: pointer;\n                }\n                \n                .dsi-signal-path {\n                    font-family: 'Cascadia Code', 'Courier New', monospace;\n                    color: #9cdcfe;\n                    font-weight: 500;\n                }\n                \n                .dsi-signal-value {\n                    font-family: 'Cascadia Code', 'Courier New', monospace;\n                    color: #ce9178;\n                }\n                \n                .dsi-signal-value.null { color: #569cd6; }\n                .dsi-signal-value.boolean { color: #569cd6; }\n                .dsi-signal-value.number { color: #b5cea8; }\n                .dsi-signal-value.object { color: #4ec9b0; }\n                \n                .dsi-signal-details {\n                    padding: 0 8px 8px;\n                    display: none;\n                    border-top: 1px solid #3e3e3e;\n                    font-size: 11px;\n                }\n                \n                .dsi-signal-item.expanded .dsi-signal-details {\n                    display: block;\n                }\n                \n                .dsi-change-log {\n                    flex: 1;\n                    overflow-y: auto;\n                    padding: 10px;\n                }\n                \n                .dsi-change-entry {\n                    margin-bottom: 5px;\n                    padding: 5px;\n                    background: rgba(127, 127, 127, 0.1);\n                    border-radius: 3px;\n                }\n                \n                .dsi-timestamp {\n                    color: #858585;\n                    margin-right: 10px;\n                }\n                \n                .dsi-console-input {\n                    padding: 10px;\n                    border-bottom: 1px solid #3e3e3e;\n                }\n                \n                .dsi-console-input input {\n                    width: 100%;\n                    padding: 6px;\n                    border-radius: 3px;\n                    font-family: 'Cascadia Code', 'Courier New', monospace;\n                }\n                \n                .dsi-console-output {\n                    flex: 1;\n                    overflow-y: auto;\n                    padding: 10px;\n                    font-family: 'Cascadia Code', 'Courier New', monospace;\n                }\n                \n                .dsi-console-line {\n                    margin-bottom: 5px;\n                    padding: 3px;\n                }\n                \n                .dsi-console-result { color: #4ec9b0; }\n                .dsi-console-error { color: #f48771; }\n                \n                .dsi-status {\n                    padding: 8px 10px;\n                    background: #007acc;\n                    color: white;\n                    font-size: 11px;\n                    display: flex;\n                    justify-content: space-between;\n                }\n            ",handleSignalPatch(n){const t=(new Date).toLocaleTimeString(),i=new Set;document.querySelectorAll(".dsi-signal-item.expanded").forEach(n=>{const t=n.getAttribute("data-signal-path");t&&i.add(t)});for(const[i,s]of Object.entries(n)){const n=this.signals.get(i);this.signals.set(i,s),this.changeLog.unshift({timestamp:t,path:i,oldValue:n,newValue:s}),this.changeLog.length>100&&this.changeLog.pop()}i.forEach(n=>this.expandedSignals.add(n)),this.updateUI();for(const[t,i]of Object.entries(n)){const n=document.querySelector(`[data-signal-path="${t}"]`);n&&(n.classList.remove("changed"),n.offsetWidth,n.classList.add("changed"))}},scanSignals(){if(!this.rootSignals)return;const n=new Map(this.signals);this.signals.clear(),this.traverseObject(this.rootSignals,"");let t=n.size!==this.signals.size;if(!t)for(const[i,s]of this.signals){const e=n.get(i);if(JSON.stringify(e)!==JSON.stringify(s)){t=!0;break}}t&&this.updateUI()},traverseObject(n,t){for(const i in n){const s=t?`${t}.${i}`:i;try{const t="function"==typeof n[i]?n[i]():n[i];void 0!==t&&(this.signals.set(s,t),null===t||"object"!=typeof t||Array.isArray(t)||this.traverseObject(t,s))}catch(n){this.signals.set(s,"<computed>")}}},getValueType:n=>null==n?"null":"boolean"==typeof n?"boolean":"number"==typeof n?"number":"object"==typeof n?"object":"string",formatValue(n){if(null===n)return"null";if(void 0===n)return"undefined";if("object"==typeof n)try{return JSON.stringify(n,null,2)}catch{return"[Object]"}return String(n)},updateUI(){this.container&&(document.getElementById("dsi-signal-count").textContent=`${this.signals.size} signals`,document.getElementById("dsi-last-update").textContent=(new Date).toLocaleTimeString(),this.updateSignalList(),this.updateChangeLog())},updateSignalList(){const n=document.getElementById("dsi-signal-list");if(!n)return;const t=n.parentElement.querySelector("input")?.value.toLowerCase()||"";document.querySelectorAll(".dsi-signal-item.expanded").forEach(n=>{const t=n.getAttribute("data-signal-path");t&&this.expandedSignals.add(t)});let i="";Array.from(this.signals.entries()).sort((n,t)=>n[0].localeCompare(t[0])).forEach(([n,s])=>{if(t&&!n.toLowerCase().includes(t))return;const e=this.getValueType(s),a=this.formatValue(s),o=a.length>50?a.substring(0,50)+"...":a,d=this.expandedSignals.has(n);i+=`\n                    <div class="dsi-signal-item ${d?"expanded":""}" data-signal-path="${n}">\n                        <div class="dsi-signal-header" onclick="DatastarInspector.toggleSignalByElement(this)">\n                            <span class="dsi-signal-path">${n}</span>\n                            <span class="dsi-signal-value ${e}">${o}</span>\n                        </div>\n                        <div class="dsi-signal-details">\n                            <div>Type: ${e}</div>\n                            <div>Value: <pre>${a}</pre></div>\n                            <button onclick="DatastarInspector.copyPathByElement(this)">Copy Path</button>\n                            <button onclick="DatastarInspector.copyValueByElement(this)">Copy Value</button>\n                        </div>\n                    </div>\n                `}),n.innerHTML=i||'<div style="padding: 20px; text-align: center; opacity: 0.5;">No signals found</div>'},updateChangeLog(){const n=document.getElementById("dsi-change-log");if(!n)return;let t="";this.changeLog.slice(0,50).forEach(n=>{t+=`\n                    <div class="dsi-change-entry">\n                        <span class="dsi-timestamp">${n.timestamp}</span>\n                        <span class="dsi-signal-path">${n.path}</span>: \n                        ${this.formatValue(n.oldValue)} ‚Üí ${this.formatValue(n.newValue)}\n                    </div>\n                `}),n.innerHTML=t||'<div style="padding: 20px; text-align: center; opacity: 0.5;">No changes yet</div>'},toggleSignal(n,t){const i=n.parentElement;i.classList.contains("expanded")?(i.classList.remove("expanded"),this.expandedSignals.delete(t)):(i.classList.add("expanded"),this.expandedSignals.add(t))},toggleSignalByElement(n){const t=n.parentElement,i=t.getAttribute("data-signal-path");t.classList.contains("expanded")?(t.classList.remove("expanded"),this.expandedSignals.delete(i)):(t.classList.add("expanded"),this.expandedSignals.add(i))},copyPathByElement(n){const t=n.closest(".dsi-signal-item").getAttribute("data-signal-path");this.copyPath(t)},copyValueByElement(n){const t=n.closest(".dsi-signal-item").getAttribute("data-signal-path");this.copyValue(t)},showTab(n){document.querySelectorAll(".dsi-tab").forEach(n=>{n.classList.remove("dsi-tab-active")}),event.target.classList.add("dsi-tab-active"),document.querySelectorAll(".dsi-panel").forEach(n=>{n.classList.remove("dsi-panel-active")}),document.getElementById(`dsi-${n}`).classList.add("dsi-panel-active")},filterSignals(n){this.updateSignalList()},executeCommand(input){const command=input.value;if(!command)return;const output=document.getElementById("dsi-console-output");try{const modifiedCommand=command.replace(/\$signals/g,"DatastarInspector.rootSignals"),result=eval(modifiedCommand);output.innerHTML+=`\n                    <div class="dsi-console-line">\n                        <span>&gt; ${command}</span>\n                    </div>\n                    <div class="dsi-console-line dsi-console-result">\n                        ${this.formatValue(result)}\n                    </div>\n                `}catch(n){output.innerHTML+=`\n                    <div class="dsi-console-line">\n                        <span>&gt; ${command}</span>\n                    </div>\n                    <div class="dsi-console-line dsi-console-error">\n                        Error: ${n.message}\n                    </div>\n                `}input.value="",output.scrollTop=output.scrollHeight},copyPath(n){navigator.clipboard.writeText(`$signals.${n}`),this.showStatus("Path copied to clipboard")},copyValue(n){const t=this.signals.get(n);navigator.clipboard.writeText(this.formatValue(t)),this.showStatus("Value copied to clipboard")},exportSignals(){const n={};this.signals.forEach((t,i)=>{n[i]=t});const t=new Blob([JSON.stringify(n,null,2)],{type:"application/json"}),i=URL.createObjectURL(t),s=document.createElement("a");s.href=i,s.download=`datastar-signals-${Date.now()}.json`,s.click(),URL.revokeObjectURL(i),this.showStatus("Signals exported")},clearLog(){this.changeLog=[],this.updateChangeLog(),this.showStatus("Change log cleared")},showStatus(n){const t=document.getElementById("dsi-status-text");t&&(t.textContent=n,setTimeout(()=>{t.textContent="Ready"},2e3))},minimize(){this.container.classList.add("dsi-minimized"),this.isVisible=!1,this.adjustPageLayout(this.config.position,!1)},close(){this.container.style.display="none",this.adjustPageLayout(this.config.position,!1)},toggle(){"none"===this.container.style.display?(this.container.style.display="",this.isVisible=!0,this.adjustPageLayout(this.config.position,!0)):this.isVisible?this.minimize():(this.container.classList.remove("dsi-minimized"),this.isVisible=!0,this.adjustPageLayout(this.config.position,!0))},changePosition(n){this.container&&(this.isVisible&&this.adjustPageLayout(this.config.position,!1),this.container.classList.remove("dsi-right","dsi-left","dsi-bottom"),this.container.classList.add(`dsi-${n}`),this.config.position=n,this.isVisible&&this.adjustPageLayout(n,!0),localStorage.setItem("datastar-inspector-position",n))},adjustPageLayout(n,t){const i=document.body;["dsi-push-right","dsi-push-left","dsi-push-bottom"].forEach(n=>i.classList.remove(n)),t&&!this.container.classList.contains("dsi-minimized")&&i.classList.add(`dsi-push-${n}`)},getSignal(n){if(!this.rootSignals)return;const t=n.split(".");let i=this.rootSignals;for(const n of t){if(!i||!i[n])return;i=i[n]}return"function"==typeof i?i():i},setSignal(n,t){if(!this.rootSignals)return!1;const i=n.split("."),s=i.pop();let e=this.rootSignals;for(const n of i){if(!e[n])return!1;e=e[n]}return"function"==typeof e[s]&&e[s](t)}};window.DatastarInspector=DatastarInspector})(window);